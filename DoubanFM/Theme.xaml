<!--
Author : K.F.Storm
Email : yk000123 at sina.com
Website : http://www.kfstorm.com
-->
<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	mc:Ignorable="PresentationOptions"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:ex="clr-namespace:Kfstorm.WpfExtensions;assembly=Kfstorm.WpfExtensions">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Kfstorm.WpfExtensions;component/Themes/Generic.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    <Style TargetType="{x:Type ex:PopupableColorPicker}">
        <Setter Property="BorderBrush" Value="White"/>
    </Style>
	<Style TargetType="{x:Type Label}">
		<Setter Property="Foreground" Value="White"/>
		<Style.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="#7FFFFFFF"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="CustomButtonBaseStyle" TargetType="{x:Type ButtonBase}">
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Foreground" Value="#7F000000"/>
			</Trigger>
			<Trigger Property="IsPressed" Value="True">
				<Setter Property="Foreground" Value="White"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="#7F222222"/>
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="CustomButtonStyle" BasedOn="{StaticResource CustomButtonBaseStyle}" TargetType="{x:Type Button}">
	</Style>
	<Style x:Key="CustomCheckBoxStyle" BasedOn="{StaticResource CustomButtonBaseStyle}" TargetType="{x:Type CheckBox}">
	</Style>

	<SolidColorBrush x:Key="NormalColor" Color="#BFFFFFFF" PresentationOptions:Freeze="True"/>
	<SolidColorBrush x:Key="HighlightColor" Color="#FFFFFFFF" PresentationOptions:Freeze="True"/>
	<SolidColorBrush x:Key="PressedColor" Color="#7FFFFFFF" PresentationOptions:Freeze="True"/>
	<SolidColorBrush x:Key="BorderColor" PresentationOptions:Freeze="True" Color="Transparent"/>
	<SolidColorBrush x:Key="BackColor" PresentationOptions:Freeze="True" Color="Transparent"/>
	<Style x:Key="stBorder" TargetType="{x:Type Border}">
		<Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
		<Setter Property="Background" Value="{StaticResource NormalColor}"/>
	</Style>
	<Style x:Key="stBackBorder" TargetType="{x:Type Border}">
		<Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
		<Setter Property="Background" Value="{StaticResource BackColor}"/>
	</Style>
	<Style x:Key="stRepeatBtn" TargetType="{x:Type RepeatButton}">
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Border x:Name="bd" Style="{StaticResource stBorder}">
						<Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="White" Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="bd" Property="Background" Value="{StaticResource HighlightColor}"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter TargetName="bd" Property="Background" Value="{StaticResource PressedColor}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="stScrollBtn" TargetType="{x:Type RepeatButton}">
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Border Background="{TemplateBinding Background}" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="stThumb" TargetType="{x:Type Thumb}">
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Border x:Name="bd" Background="{TemplateBinding Background}"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Background" Value="{StaticResource NormalColor}"/>
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="true">
				<Setter Property="Background" Value="{StaticResource HighlightColor}"/>
			</Trigger>
			<Trigger Property="IsDragging" Value="true">
				<Setter Property="Background" Value="{StaticResource PressedColor}"/>
			</Trigger>
		</Style.Triggers>
	</Style>
	<ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
		<Border Style="{StaticResource stBackBorder}">
			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition/>
					<RowDefinition Height="Auto" MaxHeight="18"/>
					<RowDefinition Height="Auto" MaxHeight="18"/>
				</Grid.RowDefinitions>
				<Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true">
					<Track.DecreaseRepeatButton>
						<RepeatButton  Style="{StaticResource stScrollBtn}" Command="ScrollBar.PageUpCommand" />
					</Track.DecreaseRepeatButton>
					<Track.Thumb>
						<Thumb Style="{StaticResource stThumb}" Margin="2,2"/>
					</Track.Thumb>
					<Track.IncreaseRepeatButton>
						<RepeatButton Style="{StaticResource stScrollBtn}" Command="ScrollBar.PageDownCommand" />
					</Track.IncreaseRepeatButton>
				</Track>
			</Grid>
		</Border>
	</ControlTemplate>
	<ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
		<Border Style="{StaticResource stBackBorder}">
			<Grid >
				<Grid.ColumnDefinitions>
					<ColumnDefinition/>
					<ColumnDefinition Width="Auto" MaxWidth="18"/>
					<ColumnDefinition Width="Auto" MaxWidth="18"/>
				</Grid.ColumnDefinitions>
				<Track x:Name="PART_Track" Grid.Column="0" IsDirectionReversed="False">
					<Track.DecreaseRepeatButton>
						<RepeatButton Style="{StaticResource stScrollBtn}" Command="ScrollBar.PageLeftCommand" />
					</Track.DecreaseRepeatButton>
					<Track.Thumb>
						<Thumb Style="{StaticResource stThumb}" Margin="0,1" />
					</Track.Thumb>
					<Track.IncreaseRepeatButton>
						<RepeatButton Style="{StaticResource stScrollBtn}" Command="ScrollBar.PageRightCommand" />
					</Track.IncreaseRepeatButton>
				</Track>
			</Grid>
		</Border>
	</ControlTemplate>
	<Style TargetType="{x:Type ScrollViewer}">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="HorizontalScrollBarVisibility" Value="Disabled"/>
		<Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollViewer}">
					<Grid x:Name="Grid" Background="{TemplateBinding Background}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="Auto"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="*"/>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>
						<Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1"/>
						<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
						<ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Template="{StaticResource VerticalScrollBar}"/>
						<ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Template="{StaticResource HorizontalScrollBar}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type Button}">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="White"/>
		<Setter Property="BorderThickness" Value="2"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Padding" Value="2"/>
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" Value="#7FFFFFFF"/>
			</Trigger>
			<Trigger Property="IsPressed" Value="True">
				<Setter Property="Foreground" Value="Black"/>
				<Setter Property="Background" Value="White"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="BorderBrush" Value="#7FFFFFFF"/>
				<Setter Property="Foreground" Value="#7FFFFFFF"/>
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style TargetType="{x:Type CheckBox}">
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type CheckBox}">
					<BulletDecorator Background="Transparent" SnapsToDevicePixels="true">
						<BulletDecorator.Bullet>
							<Border x:Name="toggleButton" Background="#BFFFFFFF" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Height="14" Width="14" Padding="1">
								<Viewbox x:Name="viewbox">
									<Canvas Width="256" Height="256" Clip="F1 M 0,0L 256,0L 256,256L 0,256L 0,0">
										<Path x:Name="tick" Width="256" Height="256" Canvas.Left="-3.77495e-007" Canvas.Top="-6.10352e-005" Stretch="Fill" Fill="#FF000000" Data="F1 M -3.77495e-007,160C 23.8367,186.523 80,256 80,256L 256,23.2727L 215.5,-6.10352e-005L 80,209.455L 32,128"/>
									</Canvas>
								</Viewbox>
							</Border>
						</BulletDecorator.Bullet>
						<ContentPresenter x:Name="presenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" TextBlock.Foreground="White"/>
					</BulletDecorator>
					<ControlTemplate.Triggers>
						<Trigger Property="HasContent" Value="True">
							<Setter Property="FocusVisualStyle">
								<Setter.Value>
									<Style>
										<Setter Property="Control.Template">
											<Setter.Value>
												<ControlTemplate>
													<Rectangle Margin="14,0,0,0" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</Setter.Value>
							</Setter>
							<Setter Property="Padding" Value="4,0,0,0"/>
						</Trigger>
						<Trigger Property="IsChecked" Value="False">
							<Setter Property="Visibility" TargetName="tick" Value="Hidden"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Control.Background" TargetName="toggleButton" Value="White"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Background" TargetName="toggleButton" Value="#7F000000"/>
							<Setter Property="Fill" TargetName="tick" Value="White"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="TextBlock.Foreground" TargetName="presenter" Value="#7FFFFFFF"/>
							<Setter Property="Background" TargetName="toggleButton" Value="#3FFFFFFF"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="Padding" Value="2,0,0,0"/>
		<Setter Property="HorizontalAlignment" Value="Left"/>
	</Style>
	<Style TargetType="{x:Type TextBox}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TextBoxBase}">
					<Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
						<ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="{TemplateBinding Padding}"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" TargetName="Bd" Value="White"/>
						</Trigger>
						<Trigger Property="IsFocused" Value="True">
							<Setter Property="Background" TargetName="Bd" Value="White"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Background" TargetName="Bd" Value="#7FFFFFFF"/>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Background" Value="#BFFFFFFF"/>
		<Setter Property="Padding" Value="1"/>
	</Style>
	<Style TargetType="{x:Type PasswordBox}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type PasswordBox}">
					<Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
						<ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="{TemplateBinding Padding}"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" TargetName="Bd" Value="White"/>
						</Trigger>
						<Trigger Property="IsFocused" Value="True">
							<Setter Property="Background" TargetName="Bd" Value="White"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Background" TargetName="Bd" Value="#7FFFFFFF"/>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Background" Value="#BFFFFFFF"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Padding" Value="1"/>
	</Style>
	<Style TargetType="{x:Type GroupBox}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type GroupBox}">
					<Grid SnapsToDevicePixels="True">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="6"/>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="6"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="*"/>
							<RowDefinition Height="6"/>
						</Grid.RowDefinitions>
						<Border BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="4" Grid.Column="0" Grid.Row="1" Grid.RowSpan="3"/>
						<Border BorderBrush="White" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="4" Grid.Row="1" Grid.RowSpan="3">
							<Border.OpacityMask>
								<MultiBinding ConverterParameter="7" UpdateSourceTrigger="Default">
									<MultiBinding.Converter>
										<BorderGapMaskConverter/>
									</MultiBinding.Converter>
									<Binding ElementName="Header" Path="ActualWidth"/>
									<Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}"/>
									<Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}"/>
								</MultiBinding>
							</Border.OpacityMask>
						</Border>
						<Border x:Name="Header" Grid.Column="1" Padding="3,1,3,0" Grid.Row="0" Grid.RowSpan="2">
							<ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
						</Border>
						<ContentPresenter Grid.ColumnSpan="2" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" Margin="{TemplateBinding Padding}" Grid.Row="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Margin" Value="2"/>
	</Style>
	<ControlTemplate x:Key="HorizontalSliderControlTemplate" TargetType="{x:Type Slider}">
		<Grid>
			<Border x:Name="TrackBackground" Background="{TemplateBinding Background}">
				<Rectangle x:Name="PART_SelectionRange" Visibility="Hidden"/>
			</Border>
			<Track x:Name="PART_Track">
				<Track.DecreaseRepeatButton>
					<RepeatButton x:Name="LeftRepeatButton" Command="Slider.DecreaseLarge" Height="10" Style="{StaticResource stScrollBtn}" Background="#7FFFFFFF"/>
				</Track.DecreaseRepeatButton>
				<Track.IncreaseRepeatButton>
					<RepeatButton x:Name="RightRepeatButton" Command="Slider.IncreaseLarge" Height="10" Style="{StaticResource stScrollBtn}" Background="#7F000000"/>
				</Track.IncreaseRepeatButton>
				<Track.Thumb>
					<Thumb x:Name="Thumb" Width="15" Height="30" Style="{StaticResource stThumb}"/>
				</Track.Thumb>
			</Track>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsSelectionRangeEnabled" Value="True">
				<Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
			</Trigger>
			<Trigger Property="IsKeyboardFocused" Value="True">
				<Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Background" TargetName="Thumb" Value="#3FFFFFFF"/>
				<Setter Property="Background" TargetName="LeftRepeatButton" Value="#3FFFFFFF"/>
				<Setter Property="Background" TargetName="RightRepeatButton" Value="#3FFFFFFF"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<ControlTemplate x:Key="VerticalSliderControlTemplate" TargetType="{x:Type Slider}">
		<Grid>
			<Border x:Name="TrackBackground" Background="{TemplateBinding Background}">
				<Rectangle x:Name="PART_SelectionRange" Visibility="Hidden"/>
			</Border>
			<Track x:Name="PART_Track" Orientation="Vertical">
				<Track.DecreaseRepeatButton>
					<RepeatButton x:Name="LeftRepeatButton" Command="Slider.DecreaseLarge" Width="10" Style="{StaticResource stScrollBtn}" Background="#7FFFFFFF"/>
				</Track.DecreaseRepeatButton>
				<Track.IncreaseRepeatButton>
					<RepeatButton x:Name="RightRepeatButton" Command="Slider.IncreaseLarge" Width="10" Style="{StaticResource stScrollBtn}" Background="#7F000000"/>
				</Track.IncreaseRepeatButton>
				<Track.Thumb>
					<Thumb x:Name="Thumb" Height="15" Width="30" Style="{StaticResource stThumb}"/>
				</Track.Thumb>
			</Track>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsSelectionRangeEnabled" Value="True">
				<Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
			</Trigger>
			<Trigger Property="IsKeyboardFocused" Value="True">
				<Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Background" TargetName="Thumb" Value="#3FFFFFFF"/>
				<Setter Property="Background" TargetName="LeftRepeatButton" Value="#3FFFFFFF"/>
				<Setter Property="Background" TargetName="RightRepeatButton" Value="#3FFFFFFF"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style TargetType="{x:Type Slider}">
		<Setter Property="Template" Value="{StaticResource HorizontalSliderControlTemplate}"/>
		<Style.Triggers>
			<Trigger Property="Orientation" Value="Vertical">
				<Setter Property="Template" Value="{StaticResource VerticalSliderControlTemplate}"/>
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style TargetType="{x:Type RadioButton}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RadioButton}">
					<BulletDecorator Background="Transparent">
						<BulletDecorator.Bullet>
							<Grid>
								<Ellipse x:Name="Outer" Width="14" Height="14" Fill="#BFFFFFFF"/>
								<Ellipse x:Name="Inner" Width="6" Height="6" Fill="Black"/>
							</Grid>
						</BulletDecorator.Bullet>
						<ContentPresenter x:Name="presenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" TextBlock.Foreground="White"/>
					</BulletDecorator>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="False">
							<Setter Property="Visibility" TargetName="Inner" Value="Hidden"/>
						</Trigger>
						<Trigger Property="HasContent" Value="True">
							<Setter Property="FocusVisualStyle">
								<Setter.Value>
									<Style>
										<Setter Property="Control.Template">
											<Setter.Value>
												<ControlTemplate>
													<Rectangle Margin="14,0,0,0" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</Setter.Value>
							</Setter>
							<Setter Property="Padding" Value="4,0,0,0"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Fill" TargetName="Outer" Value="White"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Fill" TargetName="Outer" Value="#7F000000"/>
							<Setter Property="Fill" TargetName="Inner" Value="White"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="TextBlock.Foreground" TargetName="presenter" Value="#7FFFFFFF"/>
							<Setter Property="Fill" TargetName="Outer" Value="#7FFFFFFF"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="HorizontalAlignment" Value="Left"/>
		<Setter Property="Padding" Value="2,0,0,0"/>
	</Style>
	<Style TargetType="{x:Type ProgressBar}">
		<Setter Property="Background" Value="#3F000000"/>
		<Setter Property="Foreground" Value="#BFFFFFFF"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ProgressBar}">
					<Grid x:Name="TemplateRoot" SnapsToDevicePixels="true">
						<Rectangle Fill="{TemplateBinding Background}" x:Name="PART_Track"/>
						<Decorator x:Name="PART_Indicator" HorizontalAlignment="Left">
							<Grid x:Name="Foreground">
								<Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}"/>
								<Grid x:Name="Animation" ClipToBounds="true">
									<Border x:Name="PART_GlowRect" Background="{TemplateBinding Foreground}" HorizontalAlignment="Left" Margin="-100,0,0,0" Width="100"/>
								</Grid>
							</Grid>
						</Decorator>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="Orientation" Value="Vertical">
							<Setter Property="LayoutTransform" TargetName="TemplateRoot">
								<Setter.Value>
									<RotateTransform Angle="-90"/>
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="IsIndeterminate" Value="True">
							<Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
						</Trigger>
						<Trigger Property="IsIndeterminate" Value="False">
							<Setter Property="Background" TargetName="Animation" Value="#40FFFFFF"/>
							<Setter Property="Visibility" TargetName="PART_GlowRect" Value="Collapsed"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Geometry x:Key="DownArrowGeometry">M 0 0 L 3.5 4 L 7 0 Z</Geometry>
	<Style x:Key="ComboBoxReadonlyToggleButton" TargetType="{x:Type ToggleButton}">
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="ClickMode" Value="Press"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
						<Grid HorizontalAlignment="Right" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
							<Path x:Name="Arrow" Data="{StaticResource DownArrowGeometry}" Fill="Black" HorizontalAlignment="Center" Margin="0,1,0,0" VerticalAlignment="Center"/>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Fill" TargetName="Arrow" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
		<Setter Property="AllowDrop" Value="true"/>
		<Setter Property="MinWidth" Value="0"/>
		<Setter Property="MinHeight" Value="0"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TextBox}">
					<ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="OverridesDefaultStyle" Value="True"/>
	</Style>
	<Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="ClickMode" Value="Press"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
						<Path x:Name="Arrow" Data="{StaticResource DownArrowGeometry}" Fill="Black" HorizontalAlignment="Center" Margin="0,1,0,0" VerticalAlignment="Center"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Fill" TargetName="Arrow" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type ComboBoxItem}">
		<Setter Property="Foreground" Value="White"/>
	</Style>
	<Style TargetType="{x:Type ComboBox}">
		<Setter Property="Background" Value="#BFFFFFFF"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ComboBox}">
					<Grid x:Name="MainGrid" SnapsToDevicePixels="true">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
						</Grid.ColumnDefinitions>
						<Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
							<Border x:Name="DropDownBorder" BorderThickness="1" Background="#BF000000" BorderBrush="Black" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
								<ScrollViewer x:Name="DropDownScrollViewer" Foreground="White">
									<Grid RenderOptions.ClearTypeHint="Enabled">
										<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
									</Grid>
								</ScrollViewer>
							</Border>
						</Popup>
						<ToggleButton BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxReadonlyToggleButton}"/>
						<ContentPresenter ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="HasItems" Value="false">
							<Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" Value="White"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Background" Value="#7FFFFFFF"/>
				<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
			</Trigger>
			<Trigger Property="IsEditable" Value="true">
				<Setter Property="IsTabStop" Value="false"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ComboBox}">
							<Grid x:Name="Placement" SnapsToDevicePixels="true">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="Auto"/>
								</Grid.ColumnDefinitions>
								<Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
									<Border x:Name="DropDownBorder" BorderBrush="Black" BorderThickness="1" Background="#BF000000" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=Placement}">
										<ScrollViewer x:Name="DropDownScrollViewer" Foreground="White">
											<Grid RenderOptions.ClearTypeHint="Enabled">
												<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
											</Grid>
										</ScrollViewer>
									</Border>
								</Popup>
								<Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"/>
								<TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Style="{StaticResource ComboBoxEditableTextBox}"/>
								<ToggleButton Grid.Column="1" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}" Background="Transparent"/>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="HasItems" Value="false">
									<Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style TargetType="{x:Type ListBox}">
		<Setter Property="Background" Value="#7F000000"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Foreground" Value="White"/>
		<Style.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Background" Value="Red"/>
			</Trigger>
		</Style.Triggers>
	</Style>
</ResourceDictionary>